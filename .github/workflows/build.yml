name: Build

on: [push, pull_request]

jobs:
  linux:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -GNinja

    - name: Linux Build
      run: cmake --build build --parallel $(nproc)

    - name: Build Directory Info
      continue-on-error: true
      run: find build -print | sed -e 's;[^/]*/;|──;g;s;──|; |;g'

    - name: Package
      run: |
        mkdir -p artifact
        cp build/${{ vars.PROJECT_NAME }} artifact/
        tar czf ${{ vars.PROJECT_NAME }}-Linux.tar.gz artifact/*
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ vars.PROJECT_NAME }}-Linux
        path: ${{ vars.PROJECT_NAME }}-Linux.tar.gz

  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -GNinja

    - name: MacOS Build
      run: cmake --build build --parallel $(sysctl -n hw.ncpu)

    - name: Build Directory Info
      continue-on-error: true
      run: find build -print | sed -e 's;[^/]*/;|──;g;s;──|; |;g'

    - name: Package
      run: |
        mkdir -p artifact
        cp build/${{ vars.PROJECT_NAME }} artifact/
        hdiutil create -volname ${{ vars.PROJECT_NAME }} -srcfolder artifact -ov ${{ vars.PROJECT_NAME }}-macOS.dmg
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ vars.PROJECT_NAME }}-macOS
        path: ${{ vars.PROJECT_NAME }}-macOS.dmg

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -GNinja

    - name: Build
      run: cmake --build build --config Release --parallel 4

    - name: Build Directory Info
      continue-on-error: true
      shell: pwsh
      run: |
        function Show-Tree {
            param ($Path = ".", $Indent = "")
            $items = Get-ChildItem -Path $Path
            $count = $items.Count
            $i = 0
            foreach ($item in $items) {
                $i++
                $prefix = if ($i -eq $count) { "└── " } else { "├── " }
                $nextIndent = if ($i -eq $count) { $Indent + "    " } else { $Indent + "│   " }
                if ($item.PSIsContainer) {
                    Write-Output "$Indent$prefix[$($item.Name)]"
                    Show-Tree -Path $item.FullName -Indent $nextIndent
                } else {
                    Write-Output "$Indent$prefix$($item.Name)"
                }
            }
        }
        Show-Tree -Path "build"

    - name: Package
      run: |
        mkdir artifact
        copy "build\${{ vars.PROJECT_NAME }}.exe" artifact\
        copy "build\*.dll" artifact\
        mkdir artifact\platforms
        copy "build\platforms\*.dll" artifact\platforms
        7z a "${{ vars.PROJECT_NAME }}-Windows.zip" artifact\*
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ vars.PROJECT_NAME }}-Windows
        path: ${{ vars.PROJECT_NAME }}-Windows.zip
