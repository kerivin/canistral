name: Build

on: [push, pull_request]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=bin -GNinja

    - name: Linux Build
      run: cmake --build build --parallel $(nproc)

    - name: Install
      run: cmake --install build

    - name: Directory Tree
      continue-on-error: true
      run: find bin -print | sed -e 's;[^/]*/;|──;g;s;──|; |;g'

    - name: Package tar.gz
      run: |
        cd bin
        tar czf ../${{ vars.PROJECT_NAME }}-linux.tar.gz .
      
    - name: Upload .tar.gz
      uses: actions/upload-artifact@v4
      with:
        name: ${{ vars.PROJECT_NAME }}-linux
        path: ${{ vars.PROJECT_NAME }}-linux.tar.gz

  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=bin -GNinja

    - name: MacOS Build
      run: cmake --build build --parallel $(sysctl -n hw.ncpu)

    - name: Install
      run: cmake --install build

    - name: Directory Tree
      continue-on-error: true
      run: find bin -print | sed -e 's;[^/]*/;|──;g;s;──|; |;g'

    - name: Package DMG
      run: |
        cd bin
        hdiutil create \
          -volname "${{ vars.PROJECT_NAME }}" \
          -srcfolder . \
          -ov \
          -format UDZO \
          ../${{ vars.PROJECT_NAME }}-macOS.dmg

    - name: Package tar.gz
      run: |
        cd bin
        tar czf ../${{ vars.PROJECT_NAME }}-macOS.tar.gz .

    - name: Upload .dmg
      uses: actions/upload-artifact@v4
      with:
        name: ${{ vars.PROJECT_NAME }}-macOS.dmg
        path: ${{ vars.PROJECT_NAME }}-macOS.dmg

    - name: Upload .tar.gz
      uses: actions/upload-artifact@v4
      with:
        name: ${{ vars.PROJECT_NAME }}-macOS.tar.gz
        path: ${{ vars.PROJECT_NAME }}-macOS.tar.gz

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=bin -GNinja

    - name: Build
      run: cmake --build build --config Release --parallel 4

    - name: Install
      run: cmake --install build

    - name: Directory Tree
      continue-on-error: true
      shell: pwsh
      run: |
        function Show-Tree {
            param ($Path = ".", $Indent = "")
            $items = Get-ChildItem -Path $Path
            $count = $items.Count
            $i = 0
            foreach ($item in $items) {
                $i++
                $prefix = if ($i -eq $count) { "└── " } else { "├── " }
                $nextIndent = if ($i -eq $count) { $Indent + "    " } else { $Indent + "│   " }
                if ($item.PSIsContainer) {
                    Write-Output "$Indent$prefix[$($item.Name)]"
                    Show-Tree -Path $item.FullName -Indent $nextIndent
                } else {
                    Write-Output "$Indent$prefix$($item.Name)"
                }
            }
        }
        Show-Tree -Path "bin"

    - name: Package zip
      run: |
        cd bin
        7z a -tzip ../${{ vars.PROJECT_NAME }}-windows.zip *
      
    - name: Upload zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ vars.PROJECT_NAME }}-windows
        path: ${{ vars.PROJECT_NAME }}-windows.zip
